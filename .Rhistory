rename(id = identity,
mortality = mortality_or_capture) %>%
mutate(start_date = as_date(dmy(start_date)),
end_date = as_date(dmy(end_date)),
mortality = as_date(dmy(mortality)))
# read in data and filter to establishment period
datam1 <- read.csv("results/daily_distance_moved.csv") %>%
# add metadata
left_join(dplyr::select(metadata, c("id", "cohort", "start_date"))) %>%
# format dates as dates
mutate(date_bird = as_date(date_bird),
start_date = as_date(start_date)) %>%
# calculate time since release
mutate(elapsed = as.numeric(date_bird - start_date)) %>%
# limit to first 55 days
filter(elapsed <56) %>%
# re-level so residents are the reference group for stats
mutate(cohort = relevel(factor(cohort), ref = "Resident"))
# plot daily distance over time as linear model
ggplot(datam1)+
geom_smooth(aes(elapsed, daily_dist, color = cohort), method = "lm")+
theme_minimal() +
xlab("Days post-release") +
ylab("Daily distance moved (m)")
# test whether establishment differs between the groups
m1 <- lmer(sqrt(daily_dist) ~ cohort * elapsed + (1|id), data = datam1)
summary(m1)
# plot daily distance over time as linear model
g1 <- ggplot(datam1)+
geom_smooth(aes(elapsed, daily_dist, color = cohort), method = "lm")+
theme_minimal() +
xlab("Days post-release") +
ylab("Daily distance moved (m)")
# read in data and filter to establishment period
datam2 <- read.csv("results/daily_distance_between_roosts.csv") %>%
# add metadata
left_join(dplyr::select(metadata, c("id", "cohort", "start_date"))) %>%
# format dates as dates
mutate(date = as_date(date),
start_date = as_date(start_date)) %>%
# calculate time since release
mutate(elapsed = as.numeric(date - start_date)) %>%
# limit to first 55 days
filter(elapsed <56)
# plot daily roost distance over time as linear model
g2 <- ggplot(datam2)+
geom_smooth(aes(elapsed, distance_previous, color = cohort), method = "lm")+
theme_minimal() +
xlab("Days post-release") +
ylab("Daily distance between roosts (m)")+
scale_x_continuous(breaks = scales::pretty_breaks(n = 10))
g2
# read in data and filter to establishment period
datam3 <- read.csv("results/daily_roost_distance_from_release.csv") %>%
# add metadata
left_join(dplyr::select(metadata, c("id", "cohort", "start_date"))) %>%
# format dates as dates
mutate(date = as_date(date),
start_date = as_date(start_date)) %>%
# calculate time since release
mutate(elapsed = as.numeric(date - start_date)) %>%
# limit to first 55 days
filter(elapsed <56)
m2g <- ggplot(datam3)+
geom_smooth(aes(elapsed, dist_release, color = cohort), method = "lm")+
theme_minimal() +
xlab("Days post-release") +
ylab("Distance from release site (m)")+
scale_x_continuous(breaks = scales::pretty_breaks(n = 10))
m1g <- ggplot(datam1)+
geom_smooth(aes(elapsed, daily_dist, color = cohort), method = "lm")+
theme_minimal() +
xlab("Days post-release") +
ylab("Daily distance moved (m)")
m2g <- ggplot(datam2)+
geom_smooth(aes(elapsed, distance_previous, color = cohort), method = "lm")+
theme_minimal() +
xlab("Days post-release") +
ylab("Daily distance between roosts (m)")+
scale_x_continuous(breaks = scales::pretty_breaks(n = 10))
# Packages
pacman::p_load(adehabitatHR, amt, asnipe, atlastools, beepr, emmeans, ggfortify, ggmap, ggnewscale, ggpubr, ggridges, glmmTMB, gtools, igraph, janitor, lme4, lmerTest, move2, momentuHMM, readxl, scattermore, sf, sp, STRAND, suncalc, survival, survminer, terra, tidyterra, tidyverse, wildlifeDI)
# read in data and filter to establishment period
datam6 <- read_xlsx("data/healchecks.xlsx")
# read in data and filter to establishment period
datam6 <- read_xlsx("data/healthchecks.xlsx")
warnings()
View(metadata)
View(datam6)
# read in data and filter to establishment period
datam6 <- read_xlsx("data/healthchecks.xlsx") %>%
clean_names()
View(datam6)
# read in data and filter to establishment period
datam6 <- read_xlsx("data/healthchecks.xlsx") %>%
clean_names() %>%
rename(id = identity)
View(datam6)
# read in data and filter to establishment period
datam6 <- read_xlsx("data/healthchecks.xlsx") %>%
clean_names() %>%
rename(id = identity) %>%
select(id, date, weight)
View(datam6)
# read in data and filter to establishment period
datam6 <- read_xlsx("data/healthchecks.xlsx") %>%
clean_names() %>%
rename(id = identity) %>%
select(id, date, weight) %>%
mutate(date = as_date(date))
View(datam6)
View(metadata)
# read in data and clean up
datam6 <- read_xlsx("data/healthchecks.xlsx") %>%
clean_names() %>%
rename(id = identity) %>%
select(id, date, weight) %>%
mutate(date = as_date(date)) %>%
# add metadata
left_join(select(metadata, c(id, start_date)))
View(datam6)
# read in data and clean up
datam6 <- read_xlsx("data/healthchecks.xlsx") %>%
clean_names() %>%
rename(id = identity) %>%
select(id, date, weight) %>%
mutate(date = as_date(date)) %>%
# add metadata
left_join(select(metadata, c(id, start_date))) %>%
# calculate elapsed time
mutate(elapsed = date - start_date)
View(datam6)
# read in data and clean up
datam6 <- read_xlsx("data/healthchecks.xlsx") %>%
clean_names() %>%
rename(id = identity) %>%
select(id, date, weight) %>%
mutate(date = as_date(date)) %>%
# add metadata
left_join(select(metadata, c(id, start_date))) %>%
# calculate elapsed time
mutate(elapsed = as.numeric(date - start_date))
View(datam6)
# read in data and clean up
datam6 <- read_xlsx("data/healthchecks.xlsx") %>%
clean_names() %>%
rename(id = identity) %>%
select(id, date, weight) %>%
mutate(date = as_date(date)) %>%
# add metadata
left_join(select(metadata, c(id, start_date))) %>%
# calculate elapsed time
mutate(elapsed = as.numeric(date - start_date)) %>%
# drop non-study and pre-release checks
filter(elapsed > 0)
View(datam6)
# read in data and clean up
datam6 <- read_xlsx("data/healthchecks.xlsx") %>%
clean_names() %>%
rename(id = identity) %>%
select(id, date, weight) %>%
mutate(date = as_date(date)) %>%
# add metadata
left_join(select(metadata, c(id, start_date))) %>%
# calculate elapsed time
mutate(elapsed = as.numeric(date - start_date)) %>%
# drop non-study and pre-release checks
filter(elapsed > 0) %>%
na.omit()
View(datam6)
# read in data and clean up
datam6 <- read_xlsx("data/healthchecks.xlsx") %>%
clean_names() %>%
rename(id = identity) %>%
select(id, date, weight) %>%
mutate(date = as_date(date)) %>%
# add metadata
left_join(select(metadata, c(id, start_date))) %>%
# calculate elapsed time
mutate(elapsed = as.numeric(date - start_date))
View(datam6)
# read in data and clean up
datam6 <- read_xlsx("data/healthchecks.xlsx") %>%
clean_names() %>%
rename(id = identity) %>%
select(id, date, weight) %>%
mutate(date = as_date(date)) %>%
na.omit() %>%
# add metadata
left_join(select(metadata, c(id, start_date))) %>%
# calculate elapsed time
mutate(elapsed = as.numeric(date - start_date))
View(datam6)
View(datam6)
# add metadata
left_join(select(metadata, c(id, start_date))) %>%
na.omit() %>%
# calculate elapsed time
mutate(elapsed = as.numeric(date - start_date))
# add metadata
left_join(select(metadata, c(id, start_date))) %>%
na.omit() %>%
# calculate elapsed time
mutate(elapsed = as.numeric(date - start_date))
?na.omit()
# add metadata
left_join(select(metadata, c(id, start_date))) %>%
drop_na() %>%
# calculate elapsed time
mutate(elapsed = as.numeric(date - start_date))
# read in data and clean up
datam6 <- read_xlsx("data/healthchecks.xlsx") %>%
clean_names() %>%
rename(id = identity) %>%
select(id, date, weight) %>%
mutate(date = as_date(date)) %>%
# add metadata
left_join(select(metadata, c(id, start_date))) %>%
drop_na() %>%
# calculate elapsed time
mutate(elapsed = as.numeric(date - start_date))
View(datam6)
# read in data and clean up
datam6 <- read_xlsx("data/healthchecks.xlsx") %>%
clean_names() %>%
rename(id = identity) %>%
select(id, date, weight) %>%
mutate(date = as_date(date)) %>%
# add metadata
left_join(select(metadata, c(id, start_date))) %>%
drop_na() %>%
# calculate elapsed time and add status
mutate(elapsed = as.numeric(date - start_date),
status = ifelse(elapsed > 0, "post-release",
ifelse(elapsed < -3, "release", "pre-release")))
View(datam6)
# read in data and clean up
datam6 <- read_xlsx("data/healthchecks.xlsx") %>%
clean_names() %>%
rename(id = identity) %>%
select(id, date, weight) %>%
mutate(date = as_date(date)) %>%
# add metadata
left_join(select(metadata, c(id, start_date))) %>%
drop_na() %>%
# calculate elapsed time and add status
mutate(elapsed = as.numeric(date - start_date),
status = ifelse(elapsed > 0, "post-release",
ifelse(elapsed < -3, "pre-release", "release")))
View(datam6)
# read in data and clean up
datam6 <- read_xlsx("data/healthchecks.xlsx") %>%
clean_names() %>%
rename(id = identity) %>%
select(id, date, weight) %>%
mutate(date = as_date(date)) %>%
# add metadata
left_join(select(metadata, c(id, start_date))) %>%
drop_na() %>%
# calculate elapsed time and add status
mutate(elapsed = as.numeric(date - start_date),
status = ifelse(elapsed > 0, "post-release",
ifelse(elapsed < -3, "pre-release", "release"))) %>%
# drop pre-release health checks
filter(!status == "pre-release")
View(datam6)
# plot weights over time
ggplot(datam6)+
geom_path(aes(date, weight, colour = id))
# plot weights over time
ggplot(datam6)+
geom_path(aes(date, weight, colour = id))+
theme_minimal()+
scale_colour_viridis_d()
# plot weights over time
ggplot(datam6)+
geom_path(aes(date, weight, colour = id))+
theme_bw()+
scale_colour_viridis_d()
# plot weights over time
ggplot(datam6)+
geom_path(aes(date, weight, colour = id))+
theme_minimal()+
scale_colour_viridis_d()
# plot weights over elapsed days
ggplot(datam6)+
geom_path(aes(elapsed, weight, colour = id))+
theme_minimal()+
scale_colour_viridis_d()
# limit to study period first 55 days post-release
datam6 <- datam6 %>%
filter(elapsed < 56)
# plot weights over elapsed days
ggplot(datam6)+
geom_path(aes(elapsed, weight, colour = id))+
theme_minimal()+
scale_colour_viridis_d()
View(datam6)
# read in data and clean up
datam6 <- read_xlsx("data/healthchecks.xlsx") %>%
clean_names() %>%
rename(id = identity) %>%
select(id, date, weight) %>%
mutate(date = as_date(date)) %>%
# add metadata
left_join(select(metadata, c(id, start_date))) %>%
drop_na() %>%
# calculate elapsed time and add status
mutate(elapsed = as.numeric(date - start_date),
status = ifelse(elapsed > 0, "post-release",
ifelse(elapsed < -3, "pre-release", "release"))) %>%
# drop pre-release health checks
filter(!status == "pre-release")
View(datam6)
# read in data and clean up
datam6 <- read_xlsx("data/healthchecks.xlsx") %>%
clean_names() %>%
rename(id = identity) %>%
select(id, date, weight) %>%
mutate(date = as_date(date)) %>%
# add metadata
left_join(select(metadata, c(id, start_date))) %>%
drop_na() %>%
# calculate elapsed time and add status
mutate(elapsed = as.numeric(date - start_date),
status = ifelse(elapsed > 0, "post-release",
ifelse(elapsed < -3, "pre-release", "release"))) %>%
# drop pre-release health checks
filter(!status == "pre-release")
# limit to study period 70 days
datam6 <- datam6 %>%
filter(elapsed < 70)
# plot weights over elapsed days
ggplot(datam6)+
geom_path(aes(elapsed, weight, colour = id))+
theme_minimal()+
scale_colour_viridis_d()
# read in data and clean up
datam6 <- read_xlsx("data/healthchecks.xlsx") %>%
clean_names() %>%
rename(id = identity) %>%
select(id, date, weight) %>%
mutate(date = as_date(date)) %>%
# add metadata
left_join(select(metadata, c(id, start_date))) %>%
drop_na() %>%
# calculate elapsed time and add status
mutate(elapsed = as.numeric(date - start_date),
status = ifelse(elapsed > 0, "post-release",
ifelse(elapsed < -3, "pre-release", "release"))) %>%
# drop pre-release health checks
filter(!status == "pre-release")
# limit to study period 70 days
datam6 <- datam6 %>%
filter(elapsed < 70)
length(unique(datam1$id))
# summarise weight loss in total g and as a proportion of starting weight
sum6 <- datam6 %>%
pivot_wider(names_from = status, values_from = weight)
View(sum6)
# summarise weight loss in total g and as a proportion of starting weight
sum6 <- datam6 %>%
select(!c(date, elapsed)) %>%
pivot_wider(names_from = status, values_from = weight)
View(sum6)
# read in data and clean up
datam6 <- read_xlsx("data/healthchecks.xlsx")
View(datam6)
# read in data and clean up
datam6 <- read_xlsx("data/healthchecks.xlsx") %>%
clean_names() %>%
rename(id = identity) %>%
select(id, date, weight) %>%
mutate(date = as_date(date)) %>%
# add metadata
left_join(select(metadata, c(id, start_date))) %>%
drop_na() %>%
# calculate elapsed time and add status
mutate(elapsed = as.numeric(date - start_date),
status = ifelse(elapsed > 0, "post-release",
ifelse(elapsed < -3, "pre-release", "release")))
View(datam6)
# read in data and clean up
datam6 <- read_xlsx("data/healthchecks.xlsx") %>%
clean_names() %>%
rename(id = identity) %>%
select(id, date, weight) %>%
mutate(date = as_date(date)) %>%
# add metadata
left_join(select(metadata, c(id, start_date))) %>%
drop_na() %>%
# calculate elapsed time and add status
mutate(elapsed = as.numeric(date - start_date))
View(datam6)
# read in data and clean up
datam6 <- read_xlsx("data/healthchecks.xlsx") %>%
clean_names() %>%
rename(id = identity) %>%
select(id, date, weight) %>%
mutate(date = as_date(date)) %>%
# add metadata
left_join(select(metadata, c(id, start_date))) %>%
drop_na() %>%
# calculate elapsed time and add status
mutate(elapsed = as.numeric(date - start_date)) %>%
# keep only the latest pre-release values
group_by(id) %>%
filter(elapsed > 0 | elapsed == max(elapsed[elapsed < 0], na.rm = TRUE)) %>%
ungroup()
View(datam6)
# read in data and clean up
datam6 <- read_xlsx("data/healthchecks.xlsx") %>%
clean_names() %>%
rename(id = identity) %>%
select(id, date, weight) %>%
mutate(date = as_date(date)) %>%
# add metadata
left_join(select(metadata, c(id, start_date))) %>%
drop_na() %>%
# calculate elapsed time and add status
mutate(elapsed = as.numeric(date - start_date)) %>%
# keep only the latest pre-release values
group_by(id) %>%
filter(elapsed > 0 | elapsed == max(elapsed[elapsed < 0])) %>%
ungroup()
View(datam6)
# read in data and clean up
datam6 <- read_xlsx("data/healthchecks.xlsx") %>%
clean_names() %>%
rename(id = identity) %>%
select(id, date, weight) %>%
mutate(date = as_date(date)) %>%
# add metadata
left_join(select(metadata, c(id, start_date))) %>%
drop_na() %>%
# calculate elapsed time and add status
mutate(elapsed = as.numeric(date - start_date))
View(datam6)
# read in data and clean up
datam6 <- read_xlsx("data/healthchecks.xlsx") %>%
clean_names() %>%
rename(id = identity) %>%
select(id, date, weight) %>%
mutate(date = as_date(date)) %>%
# add metadata
left_join(select(metadata, c(id, start_date))) %>%
drop_na() %>%
# calculate elapsed time and add status
mutate(elapsed = as.numeric(date - start_date)) %>%
# keep only the latest pre-release values
group_by(id) %>%
filter(elapsed > 0 | elapsed == max(elapsed[elapsed =< 0])) %>%
# read in data and clean up
datam6 <- read_xlsx("data/healthchecks.xlsx") %>%
clean_names() %>%
rename(id = identity) %>%
select(id, date, weight) %>%
mutate(date = as_date(date)) %>%
# add metadata
left_join(select(metadata, c(id, start_date))) %>%
drop_na() %>%
# calculate elapsed time and add status
mutate(elapsed = as.numeric(date - start_date)) %>%
# keep only the latest pre-release values
group_by(id) %>%
filter(elapsed > 0 | elapsed == max(elapsed[elapsed <= 0])) %>%
ungroup()
View(datam6)
# plot weights over time
ggplot(datam6)+
geom_path(aes(date, weight, colour = id))+
theme_minimal()+
scale_colour_viridis_d()
# limit to study period 70 days
datam6 <- datam6 %>%
filter(elapsed < 70)
# plot weights over elapsed days
ggplot(datam6)+
geom_path(aes(elapsed, weight, colour = id))+
theme_minimal()+
scale_colour_viridis_d()
# read in data and clean up
datam6 <- read_xlsx("data/healthchecks.xlsx") %>%
clean_names() %>%
rename(id = identity) %>%
select(id, date, weight) %>%
mutate(date = as_date(date)) %>%
# add metadata
left_join(select(metadata, c(id, start_date, cohort))) %>%
drop_na() %>%
# calculate elapsed time and add status
mutate(elapsed = as.numeric(date - start_date)) %>%
# keep only the latest pre-release values
group_by(id) %>%
filter(elapsed > 0 | elapsed == max(elapsed[elapsed <= 0])) %>%
ungroup()
View(datam6)
# plot weights over time
ggplot(datam6)+
geom_path(aes(date, weight, colour = id))+
theme_minimal()+
scale_colour_viridis_d()+
facet_wrap(~cohort)
# limit to study period 70 days
datam6 <- datam6 %>%
filter(elapsed < 70)
# plot weights over elapsed days
ggplot(datam6)+
geom_path(aes(elapsed, weight, colour = id))+
theme_minimal()+
scale_colour_viridis_d()+
facet_wrap(~cohort)
