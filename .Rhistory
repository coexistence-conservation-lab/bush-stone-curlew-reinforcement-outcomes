citation()
setwd("C:/Users/shosh/OneDrive/2 PhD/GIT/Bush-stone-curlew-reinforcement-outcomes")
setwd("C:/Users/shosh/OneDrive/2 PhD/GIT/bush-stone-curlew-reinforcement-outcomes")
# Packages
pacman::p_load(amt, atlastools, beepr, crawl, ggfortify, ggmap, ggnewscale, ggpubr, ggridges, janitor, lme4, lmerTest, move, momentuHMM, scattermore, sf, spThin, suncalc, survival, survminer, terra, tidyterra, tidyverse)
# read in cleaned night data
data_night <- read.csv("data/data_clean_night.csv") %>%
# drop columns notneeded
dplyr::select(!c(sunrise, sunset, suntime, tod)) %>%
# format date time in posixct
mutate(time_local = as.POSIXct(time_local),
date_bird = as_date(date_bird)) %>%
# rename id column for momentuHMM
rename(ID = id)
View(data_night)
steps <- data_night %>%
# format as amt track - add columns as needed
make_track(.x = easting, .y = northing, .t = time_local, id = id) %>%
steps(keep_cols = "start")
# read in cleaned night data
data_night <- read.csv("data/data_clean_night.csv") %>%
# drop columns notneeded
dplyr::select(!c(sunrise, sunset, suntime, tod)) %>%
# format date time in posixct
mutate(time_local = as.POSIXct(time_local),
date_bird = as_date(date_bird))
steps <- data_night %>%
# format as amt track - add columns as needed
make_track(.x = easting, .y = northing, .t = time_local, id = id) %>%
steps(keep_cols = "start")
View(steps)
# Test subset, Nutmeg 1 month
dates <- seq(as.Date("2023-06-01"), as.Date("2023-07-01"), "days")
test <- filter(data_night, ID == "Nutmeg" & date_bird %in% dates)
test <- filter(data_night, id == "Nutmeg" & date_bird %in% dates)
# Calculate vector of the dynamic body acceleration (VEDBA)
test <- test %>%
mutate(vedba = ((sqrt(acceleration_raw_x^2 + acceleration_raw_y^2 + acceleration_raw_x^2))/1000))
test
max.print(3)
options(max.print = 3)
test
options(max.print = 10)
test
options(max.print = 20)
test
# format as amt and calculate step lengths
steps <- test %>%
# format as amt track - add columns as needed
make_track(.x = easting, .y = northing, .t = time_local, id = id, date_bird = date_bird) %>%
steps(keep_cols = "start")
# format as amt and calculate step lengths
steps <- test %>%
# format as amt track - add columns as needed
make_track(.x = easting, .y = northing, .t = time_local, id = id, date_bird = date_bird)
steps
# check sample rate
summarize_sampling_rate(steps)
# format as amt and calculate step lengths
steps <- test %>%
# format as amt track - add columns as needed
make_track(.x = easting, .y = northing, .t = time_local, id = id, date_bird = date_bird)
# check sample rate
summarize_sampling_rate(steps)
# Test subset, Nutmeg 1 month
dates <- seq(as.Date("2023-06-01"), as.Date("2023-07-01"), "days")
test <- filter(data_night, id == "Nutmeg" & date_bird %in% dates)
# Calculate vector of the dynamic body acceleration (VEDBA)
test <- test %>%
mutate(vedba = ((sqrt(acceleration_raw_x^2 + acceleration_raw_y^2 + acceleration_raw_x^2))/1000))
# format as amt and calculate step lengths
steps <- test %>%
# format as amt track - add columns as needed
make_track(.x = easting, .y = northing, .t = time_local, id = id, date_bird = date_bird)
# check sample rate
summarize_sampling_rate(steps)
# format as amt and calculate step lengths
steps <- test %>%
# format as amt track - add columns as needed
make_track(.x = easting, .y = northing, .t = time_local, id = id, date_bird = date_bird) %>%
steps()
# Test subset, Nutmeg 1 month
dates <- seq(as.Date("2023-06-01"), as.Date("2023-07-01"), "days")
test <- filter(data_night, id == "Nutmeg" & date_bird %in% dates)
# Calculate vector of the dynamic body acceleration (VEDBA)
test <- test %>%
mutate(vedba = ((sqrt(acceleration_raw_x^2 + acceleration_raw_y^2 + acceleration_raw_x^2))/1000))
# format as amt and calculate step lengths
steps <- test %>%
# format as amt track - add columns as needed
make_track(.x = easting, .y = northing, .t = time_local, id = id, date_bird = date_bird) %>%
steps()
# check sample rate
summarize_sampling_rate(steps)
# format as amt and calculate step lengths
steps <- test %>%
# format as amt track - add columns as needed
make_track(.x = easting, .y = northing, .t = time_local, id = id, date_bird = date_bird) %>%
steps()
# check sample rate
summarize_sampling_rate(steps)
# read in cleaned night data
data_night <- read.csv("data/data_clean_night.csv") %>%
# drop columns notneeded
dplyr::select(!c(sunrise, sunset, suntime, tod)) %>%
# format date time in posixct
mutate(time_local = as.POSIXct(time_local),
date_bird = as_date(date_bird))
# prep data for moveHMM
data_hmm <- data_night %>%
prepData(type = "UTM", coordNames = c("easting", "northing"),
covNames = c("acceleration_raw_x", "acceleration_raw_y", "acceleration_raw_z", "altitude")) %>%
# add vector of the dynamic body acceleration (VEDBA)
mutate(vedba = ((sqrt(acceleration_raw_x^2 + acceleration_raw_y^2 + acceleration_raw_x^2))/1000))
test <- filter(data_hmm, id == "Nutmeg" & date_bird %in% dates)
test
# format as amt and calculate step lengths
steps <- test %>%
# format as amt track - add columns as needed
make_track(.x = easting, .y = northing, .t = time_local, id = id, date_bird = date_bird)
# Packages
pacman::p_load(amt, atlastools, beepr, crawl, ggfortify, ggmap, ggnewscale, ggpubr, ggridges, janitor, lme4, lmerTest, move, momentuHMM, scattermore, sf, spThin, suncalc, survival, survminer, terra, tidyterra, tidyverse)
# read in cleaned night data
data_night <- read.csv("data/data_clean_night.csv") %>%
# drop columns notneeded
dplyr::select(!c(sunrise, sunset, suntime, tod)) %>%
# format date time in posixct
mutate(time_local = as.POSIXct(time_local),
date_bird = as_date(date_bird))
# prep data for moveHMM
data_hmm <- data_night %>%
prepData(type = "UTM", coordNames = c("easting", "northing"),
covNames = c("acceleration_raw_x", "acceleration_raw_y", "acceleration_raw_z", "altitude")) %>%
# add vector of the dynamic body acceleration (VEDBA)
mutate(vedba = ((sqrt(acceleration_raw_x^2 + acceleration_raw_y^2 + acceleration_raw_x^2))/1000))
# Test subset, Nutmeg 1 month
dates <- seq(as.Date("2023-06-01"), as.Date("2023-07-01"), "days")
test <- filter(data_hmm, id == "Nutmeg" & date_bird %in% dates)
# format as amt and calculate step lengths
steps <- test %>%
# format as amt track - add columns as needed
make_track(.x = easting, .y = northing, .t = time_local, id = id, date_bird = date_bird)
View(data_hmm)
# format as amt and calculate step lengths
steps <- test %>%
# format as amt track - add columns as needed
make_track(.x = x, .y = y, .t = time_local, id = id, date_bird = date_bird)
View(steps)
# format as amt and calculate step lengths
steps <- test %>%
# format as amt track - add columns as needed
make_track(.x = x, .y = y, .t = time_local, id = id, date_bird = date_bird) %>%
steps()
View(steps)
View(test)
test <- filter(data_hmm, id == "Aurora" & date_bird %in% dates)
View(test)
# format as amt and calculate step lengths
steps <- test %>%
# format as amt track - add columns as needed
make_track(.x = x, .y = y, .t = time_local, id = id, date_bird = date_bird)
# check sample rate
summarize_sampling_rate(steps)
