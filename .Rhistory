prox2 <- read.csv("results/proximity_reinforcers.csv") %>%
# add rows for last and first bird self comparison
rbind(data.frame(id1 = c("Zeus", "Athena"),
id2 = c("Zeus", "Athena"),
prox = c(NA, NA))) %>%
# long to wide format
pivot_wider(names_from = id2, values_from = prox) %>%
# first column to rownames
column_to_rownames("id1") %>%
# relocate first bird to first column
relocate(Athena) %>%
# format as matrix
as.matrix()
# make symmetrical
prox2[lower.tri(prox2)] <- t(prox2)[lower.tri(prox2)]
# convert to graph object
network2 <- graph_from_adjacency_matrix(prox2, mode = "undirected", diag = FALSE, weighted = TRUE)
# network density - real edges divided by possible edges
edge_density(network2)
# network components - are all nodes connected?
components(network2)
# distance between nodes
distances(network2, algorithm="unweighted")
# proportion of node's neighbors that are connected to each other
summary(transitivity(network2, "local"))
# community with walktrap
w2 <- cluster_walktrap(network2, steps = 10)
length(w2)
modularity(w2)
membership(w2)
# set seed to keep layout static
set.seed(0000)
networkfr2 <- create_layout(network2, layout = "fr")
# add community and cohort to network layout
comm2 <- networkfr2 %>%
rename(id = name) %>%
mutate(community = as.factor(membership(w2))) %>%
left_join(select(metadata, c(id, cohort)))
hist(E(network2)$weight)
# reinforcer network
n2 <- ggraph(comm2)+
# communites polygons
geom_mark_hull(aes(x = x, y = y, fill = community),
colour = "white", alpha = 0.2, expand = unit(0.8, "cm"),
show.legend = FALSE)+
scale_fill_manual(values = c("#07F567", "#2E3FFF"))+
# format edge colour, alpha and width by the weight (proximity)
geom_edge_fan(aes(colour = weight, alpha = weight, width = weight),
show.legend = FALSE)+
scale_edge_color_continuous(low = "grey90", high = "slateblue4")+
scale_edge_width(range = c(0.1, 3))+
# node shape by cohort
geom_node_point(aes(shape = cohort), size = 5,
show.legend = FALSE)+
scale_shape_manual(values=c(15, 16))+
# theme
expand_limits(x = c(2, 7), y = c(-3.8, 2.6))+
theme_graph(foreground = "black", border = TRUE,
plot_margin = margin(10, 20, 20, 20))
n2
# reinforcer network
n2 <- ggraph(comm2)+
# communites polygons
geom_mark_hull(aes(x = x, y = y, fill = community),
colour = "white", alpha = 0.2, expand = unit(0.8, "cm"),
show.legend = FALSE)+
scale_fill_manual(values = c("#07F999", "#2E3FFF"))+
# format edge colour, alpha and width by the weight (proximity)
geom_edge_fan(aes(colour = weight, alpha = weight, width = weight),
show.legend = FALSE)+
scale_edge_color_continuous(low = "grey90", high = "slateblue4")+
scale_edge_width(range = c(0.1, 3))+
# node shape by cohort
geom_node_point(aes(shape = cohort), size = 5,
show.legend = FALSE)+
scale_shape_manual(values=c(15, 16))+
# theme
expand_limits(x = c(2, 7), y = c(-3.8, 2.6))+
theme_graph(foreground = "black", border = TRUE,
plot_margin = margin(10, 20, 20, 20))
n2
# reinforcer network
n2 <- ggraph(comm2)+
# communites polygons
geom_mark_hull(aes(x = x, y = y, fill = community),
colour = "white", alpha = 0.2, expand = unit(0.8, "cm"),
show.legend = FALSE)+
scale_fill_manual(values = c("seagreen", "#2E3FFF"))+
# format edge colour, alpha and width by the weight (proximity)
geom_edge_fan(aes(colour = weight, alpha = weight, width = weight),
show.legend = FALSE)+
scale_edge_color_continuous(low = "grey90", high = "slateblue4")+
scale_edge_width(range = c(0.1, 3))+
# node shape by cohort
geom_node_point(aes(shape = cohort), size = 5,
show.legend = FALSE)+
scale_shape_manual(values=c(15, 16))+
# theme
expand_limits(x = c(2, 7), y = c(-3.8, 2.6))+
theme_graph(foreground = "black", border = TRUE,
plot_margin = margin(10, 20, 20, 20))
n2
# reinforcer network
n2 <- ggraph(comm2)+
# communites polygons
geom_mark_hull(aes(x = x, y = y, fill = community),
colour = "white", alpha = 0.2, expand = unit(0.8, "cm"),
show.legend = FALSE)+
scale_fill_manual(values = c("seagreen2", "#2E3FFF"))+
# format edge colour, alpha and width by the weight (proximity)
geom_edge_fan(aes(colour = weight, alpha = weight, width = weight),
show.legend = FALSE)+
scale_edge_color_continuous(low = "grey90", high = "slateblue4")+
scale_edge_width(range = c(0.1, 3))+
# node shape by cohort
geom_node_point(aes(shape = cohort), size = 5,
show.legend = FALSE)+
scale_shape_manual(values=c(15, 16))+
# theme
expand_limits(x = c(2, 7), y = c(-3.8, 2.6))+
theme_graph(foreground = "black", border = TRUE,
plot_margin = margin(10, 20, 20, 20))
n2
# reinforcer network
n2 <- ggraph(comm2)+
# communites polygons
geom_mark_hull(aes(x = x, y = y, fill = community),
colour = "white", alpha = 0.2, expand = unit(0.8, "cm"),
show.legend = FALSE)+
scale_fill_manual(values = c("seagreen3", "#2E3FFF"))+
# format edge colour, alpha and width by the weight (proximity)
geom_edge_fan(aes(colour = weight, alpha = weight, width = weight),
show.legend = FALSE)+
scale_edge_color_continuous(low = "grey90", high = "slateblue4")+
scale_edge_width(range = c(0.1, 3))+
# node shape by cohort
geom_node_point(aes(shape = cohort), size = 5,
show.legend = FALSE)+
scale_shape_manual(values=c(15, 16))+
# theme
expand_limits(x = c(2, 7), y = c(-3.8, 2.6))+
theme_graph(foreground = "black", border = TRUE,
plot_margin = margin(10, 20, 20, 20))
n2
# resident network
n1 <- ggraph(comm1)+
# community polygon
geom_mark_hull(aes(x = x, y = y, fill = community),
colour = "white", alpha = 0.2, expand = unit(0.5, "cm"),
show.legend = FALSE)+
scale_fill_manual(values = c("yellow", "tomato"))+
# format edge colour, alpha and width by the weight (proximity)
geom_edge_fan(aes(colour = weight, alpha = weight, linewidth = weight/2),
show.legend = FALSE)+
scale_edge_color_continuous(low = "grey", high = "slateblue4")+
# node basic
geom_node_point(size = 5, shape = 16)+
# theme
expand_limits(x = c(-6, 3), y = c(-4.5, 0.4))+
theme_graph(foreground = "black", border = TRUE,
plot_margin = margin(10, 60, 0, 60))
# resident network
n1 <- ggraph(comm1)+
# community polygon
geom_mark_hull(aes(x = x, y = y, fill = community),
colour = "white", alpha = 0.2, expand = unit(0.5, "cm"),
show.legend = FALSE)+
scale_fill_manual(values = c("yellow", "tomato"))+
# format edge colour, alpha and width by the weight (proximity)
geom_edge_fan(aes(colour = weight, alpha = weight, linewidth = weight/2),
show.legend = FALSE)+
scale_edge_color_continuous(low = "grey", high = "slateblue4")+
# node basic
geom_node_point(size = 5, shape = 16)+
# theme
expand_limits(x = c(-6, 3), y = c(-4.5, 0.4))+
theme_graph(foreground = "black", border = TRUE,
plot_margin = margin(10, 60, 0, 60))
# add community to network layout
comm1 <- networkfr1 %>%
mutate(community = as.factor(membership(w)))
# set seed to keep layout static
set.seed(4739)
networkfr1 <- create_layout(network1, layout = "fr")
# plot with tidygraph (wrapper for igraph in tidy API)
ggraph(networkfr1)+
# format edge colour, alpha and width by the weight (proximity)
geom_edge_fan(aes(colour = weight, alpha = weight, linewidth = weight/2),
show.legend = FALSE)+
scale_edge_color_continuous(low = "grey", high = "slateblue3")+
# node basic
geom_node_point(size = 7, shape = 16)+
# add labels
#geom_node_text(aes(label = name), nudge_y = 0.15)+
# theme
theme_void()
# community with edge betweenness
eb <- cluster_edge_betweenness(network)
# community with edge betweenness
eb <- cluster_edge_betweenness(network1)
length(eb)
modularity(eb)
membership(eb)
# community with walktrap
w <- cluster_walktrap(network1)
length(w)
modularity(w)
membership(w)
# community with spinglass
sg <- cluster_spinglass(network1)
length(sg)
modularity(sg)
membership(sg)
# community with infomap
im <- cluster_infomap(network1)
length(im)
modularity(im)
membership(im)
# add community to network layout
comm1 <- networkfr1 %>%
mutate(community = as.factor(membership(w)))
# read in dyad proximity scores and convert to association matrix
prox2 <- read.csv("results/proximity_reinforcers.csv") %>%
# add rows for last and first bird self comparison
rbind(data.frame(id1 = c("Zeus", "Athena"),
id2 = c("Zeus", "Athena"),
prox = c(NA, NA))) %>%
# long to wide format
pivot_wider(names_from = id2, values_from = prox) %>%
# first column to rownames
column_to_rownames("id1") %>%
# relocate first bird to first column
relocate(Athena) %>%
# format as matrix
as.matrix()
# make symmetrical
prox2[lower.tri(prox2)] <- t(prox2)[lower.tri(prox2)]
# convert to graph object
network2 <- graph_from_adjacency_matrix(prox2, mode = "undirected", diag = FALSE, weighted = TRUE)
# network density - real edges divided by possible edges
edge_density(network2)
# network components - are all nodes connected?
components(network2)
# distance between nodes
distances(network2, algorithm="unweighted")
# proportion of node's neighbors that are connected to each other
summary(transitivity(network2, "local"))
# community with walktrap
w2 <- cluster_walktrap(network2, steps = 10)
length(w2)
modularity(w2)
membership(w2)
# set seed to keep layout static
set.seed(0000)
networkfr2 <- create_layout(network2, layout = "fr")
# add community and cohort to network layout
comm2 <- networkfr2 %>%
rename(id = name) %>%
mutate(community = as.factor(membership(w2))) %>%
left_join(select(metadata, c(id, cohort)))
hist(E(network2)$weight)
# resident network
n1 <- ggraph(comm1)+
# community polygon
geom_mark_hull(aes(x = x, y = y, fill = community),
colour = "white", alpha = 0.2, expand = unit(0.5, "cm"),
show.legend = FALSE)+
scale_fill_manual(values = c("yellow", "tomato"))+
# format edge colour, alpha and width by the weight (proximity)
geom_edge_fan(aes(colour = weight, alpha = weight, linewidth = weight/2),
show.legend = FALSE)+
scale_edge_color_continuous(low = "grey", high = "slateblue4")+
# node basic
geom_node_point(size = 5, shape = 16)+
# theme
expand_limits(x = c(-6, 3), y = c(-4.5, 0.4))+
theme_graph(foreground = "black", border = TRUE,
plot_margin = margin(10, 60, 0, 60))
# reinforcer network
n2 <- ggraph(comm2)+
# communites polygons
geom_mark_hull(aes(x = x, y = y, fill = community),
colour = "white", alpha = 0.2, expand = unit(0.8, "cm"),
show.legend = FALSE)+
scale_fill_manual(values = c("seagreen3", "#2E3FFF"))+
# format edge colour, alpha and width by the weight (proximity)
geom_edge_fan(aes(colour = weight, alpha = weight, width = weight),
show.legend = FALSE)+
scale_edge_color_continuous(low = "grey90", high = "slateblue4")+
scale_edge_width(range = c(0.1, 3))+
# node shape by cohort
geom_node_point(aes(shape = cohort), size = 5,
show.legend = FALSE)+
scale_shape_manual(values=c(15, 16))+
# theme
expand_limits(x = c(2, 7), y = c(-3.8, 2.6))+
theme_graph(foreground = "black", border = TRUE,
plot_margin = margin(10, 20, 20, 20))
# multi panel
ggarrange(n1, n2,
labels = c("A", "B"),
ncol = 1, nrow = 2,
heights = c(0.5, 1))
# resident network
n1 <- ggraph(comm1)+
# community polygon
geom_mark_hull(aes(x = x, y = y, fill = community),
colour = "white", alpha = 0.2, expand = unit(0.5, "cm"),
show.legend = FALSE)+
scale_fill_manual(values = c("grey20", "grey70"))+
# format edge colour, alpha and width by the weight (proximity)
geom_edge_fan(aes(colour = weight, alpha = weight, linewidth = weight/2),
show.legend = FALSE)+
scale_edge_color_continuous(low = "grey", high = "slateblue4")+
# node basic
geom_node_point(size = 5, shape = 16)+
# theme
expand_limits(x = c(-6, 3), y = c(-4.5, 0.4))+
theme_graph(foreground = "black", border = TRUE,
plot_margin = margin(10, 60, 0, 60))
n1
# resident network
n1 <- ggraph(comm1)+
# community polygon
geom_mark_hull(aes(x = x, y = y, fill = community),
colour = "white", alpha = 0.2, expand = unit(0.5, "cm"),
show.legend = FALSE)+
scale_fill_manual(values = c("grey10", "grey60"))+
# format edge colour, alpha and width by the weight (proximity)
geom_edge_fan(aes(colour = weight, alpha = weight, linewidth = weight/2),
show.legend = FALSE)+
scale_edge_color_continuous(low = "grey", high = "slateblue4")+
# node basic
geom_node_point(size = 5, shape = 16)+
# theme
expand_limits(x = c(-6, 3), y = c(-4.5, 0.4))+
theme_graph(foreground = "black", border = TRUE,
plot_margin = margin(10, 60, 0, 60))
n1
# resident network
n1 <- ggraph(comm1)+
# community polygon
geom_mark_hull(aes(x = x, y = y, fill = community),
colour = "white", alpha = 0.2, expand = unit(0.5, "cm"),
show.legend = FALSE)+
scale_fill_manual(values = c("grey10", "grey60"))+
# format edge colour, alpha and width by the weight (proximity)
geom_edge_fan(aes(colour = weight, alpha = weight, linewidth = weight/2),
show.legend = FALSE)+
scale_edge_color_continuous(low = "grey", high = "slateblue4")+
# node basic
geom_node_point(size = 5, shape = 16)+
# theme
expand_limits(x = c(-6, 3), y = c(-4.5, 0.4))+
theme_graph(foreground = "black", border = TRUE,
plot_margin = margin(10, 60, 0, 60))
# reinforcer network
n2 <- ggraph(comm2)+
# communites polygons
geom_mark_hull(aes(x = x, y = y, fill = community),
colour = "white", alpha = 0.2, expand = unit(0.8, "cm"),
show.legend = FALSE)+
scale_fill_manual(values = c("seagreen3", "#2E3FFF"))+
# format edge colour, alpha and width by the weight (proximity)
geom_edge_fan(aes(colour = weight, alpha = weight, width = weight),
show.legend = FALSE)+
scale_edge_color_continuous(low = "grey90", high = "slateblue4")+
scale_edge_width(range = c(0.1, 3))+
# node shape by cohort
geom_node_point(aes(shape = cohort), size = 5,
show.legend = FALSE)+
scale_shape_manual(values=c(15, 16))+
# theme
expand_limits(x = c(2, 7), y = c(-3.8, 2.6))+
theme_graph(foreground = "black", border = TRUE,
plot_margin = margin(10, 20, 20, 20))
# multi panel
ggarrange(n1, n2,
labels = c("A", "B"),
ncol = 1, nrow = 2,
heights = c(0.5, 1))
# resident network
n1 <- ggraph(comm1)+
# community polygon
geom_mark_hull(aes(x = x, y = y, fill = community),
colour = "white", alpha = 0.2, expand = unit(0.5, "cm"),
show.legend = FALSE)+
scale_fill_manual(values = c("blue", "grey60"))+
# format edge colour, alpha and width by the weight (proximity)
geom_edge_fan(aes(colour = weight, alpha = weight, linewidth = weight/2),
show.legend = FALSE)+
scale_edge_color_continuous(low = "grey", high = "slateblue4")+
# node basic
geom_node_point(size = 5, shape = 16)+
# theme
expand_limits(x = c(-6, 3), y = c(-4.5, 0.4))+
theme_graph(foreground = "black", border = TRUE,
plot_margin = margin(10, 60, 0, 60))
n1
# resident network
n1 <- ggraph(comm1)+
# community polygon
geom_mark_hull(aes(x = x, y = y, fill = community),
colour = "white", alpha = 0.2, expand = unit(0.5, "cm"),
show.legend = FALSE)+
scale_fill_manual(values = c("grey10", "grey60"))+
# format edge colour, alpha and width by the weight (proximity)
geom_edge_fan(aes(colour = weight, alpha = weight, linewidth = weight/2),
show.legend = FALSE)+
scale_edge_color_continuous(low = "grey", high = "slateblue4")+
# node basic
geom_node_point(size = 5, shape = 16)+
# theme
expand_limits(x = c(-6, 3), y = c(-4.5, 0.4))+
theme_graph(foreground = "black", border = TRUE,
plot_margin = margin(10, 60, 0, 60))
# resident network
n1 <- ggraph(comm1)+
# community polygon
geom_mark_hull(aes(x = x, y = y, fill = community),
colour = "white", alpha = 0.2, expand = unit(0.5, "cm"),
show.legend = FALSE)+
scale_fill_manual(values = c("grey10", "grey60"))+
# format edge colour, alpha and width by the weight (proximity)
geom_edge_fan(aes(colour = weight, alpha = weight, linewidth = weight/2),
show.legend = FALSE)+
scale_edge_color_continuous(low = "grey", high = "slateblue4")+
# node basic
geom_node_point(size = 5, shape = 16)+
# theme
expand_limits(x = c(-6, 3), y = c(-4.5, 0.4))+
theme_graph(foreground = "black", border = TRUE,
plot_margin = margin(10, 60, 0, 60))
# reinforcer network
n2 <- ggraph(comm2)+
# communites polygons
geom_mark_hull(aes(x = x, y = y, fill = community),
colour = "white", alpha = 0.2, expand = unit(0.8, "cm"),
show.legend = FALSE)+
scale_fill_manual(values = c("seagreen3", "#2E3FFF"))+
# format edge colour, alpha and width by the weight (proximity)
geom_edge_fan(aes(colour = weight, alpha = weight, width = weight),
show.legend = FALSE)+
scale_edge_color_continuous(low = "grey90", high = "slateblue4")+
scale_edge_width(range = c(0.1, 3))+
# node shape by cohort
geom_node_point(aes(shape = cohort), size = 5,
show.legend = FALSE)+
scale_shape_manual(values=c(15, 16))+
# theme
expand_limits(x = c(2, 7), y = c(-3.8, 2.6))+
theme_graph(foreground = "black", border = TRUE,
plot_margin = margin(10, 20, 20, 20))
# multi panel
ggarrange(n1, n2,
labels = c("A", "B"),
ncol = 1, nrow = 2,
heights = c(0.5, 1))
ggmap(map_z15)+
# plot roosts colour by time
geom_point(aes(longitude, latitude, colour = date),
size = 2, data = datam8, inherit.aes = FALSE)+
# add release location
geom_point(aes(144.434323, -37.902374),
colour = "white", size = 5, shape = 13, inherit.aes = FALSE)+
# add fence
geom_spatvector(data = mtr, inherit.aes = FALSE, fill = NA, colour = "white",
linetype = "longdash")+
# wrap by period
facet_wrap(~period)+
# theme options
scale_colour_viridis_c(trans = "date", name = "2023")+
theme_void()+
scale_y_continuous(expand = expansion(mult = c(0, 0.01)))+
theme(legend.position="bottom",
legend.key.width = unit(4, 'cm'),
strip.text = element_text(size = 15))
ggmap(map_z15)+
# plot roosts colour by time
geom_point(aes(longitude, latitude, colour = date, shape = id),
size = 2, data = datam8, inherit.aes = FALSE)+
# add release location
geom_point(aes(144.434323, -37.902374),
colour = "white", size = 5, shape = 13, inherit.aes = FALSE)+
# add fence
geom_spatvector(data = mtr, inherit.aes = FALSE, fill = NA, colour = "white",
linetype = "longdash")+
# wrap by period
facet_wrap(~period)+
# theme options
scale_colour_viridis_c(trans = "date", name = "2023")+
theme_void()+
scale_y_continuous(expand = expansion(mult = c(0, 0.01)))+
theme(legend.position="bottom",
legend.key.width = unit(4, 'cm'),
strip.text = element_text(size = 15))
ggmap(map_z15)+
# plot roosts colour by time
geom_point(aes(longitude, latitude, colour = date, shape = id),
size = 2, data = datam8, inherit.aes = FALSE)+
# add release location
geom_point(aes(144.434323, -37.902374),
colour = "white", size = 5, shape = 13, inherit.aes = FALSE)+
# add fence
geom_spatvector(data = mtr, inherit.aes = FALSE, fill = NA, colour = "white",
linetype = "longdash")+
# wrap by period
facet_wrap(~period)+
# theme options
scale_colour_viridis_c(trans = "date", name = "2023")+
theme_void()+
scale_y_continuous(expand = expansion(mult = c(0, 0.01)))
